plugins {
    id 'com.gladed.androidgitversion' version '0.2.13'
    id "com.jfrog.bintray" version "1.6"

}

apply plugin: 'com.android.library'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings false
    }
}
configurations {

}
dependencies {
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.google.code.gson:gson:2.6.2'
    testCompile 'org.robolectric:robolectric:3.1'
    testCompile 'org.robolectric:shadows-httpclient:3.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'com.android.support.test:runner:0.5'
    testCompile 'com.android.support:support-annotations:23.4.0'
}
tasks.withType(Test) {
    systemProperty "robolectric.logging", "stdout"
}
task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocsJar
    archives sourcesJar
//    archives releaseJar
}

