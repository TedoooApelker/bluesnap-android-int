plugins {
    id 'com.gladed.androidgitversion' version '0.2.13'
    id "com.jfrog.bintray" version "1.6"
    id "com.github.dcendents.android-maven" version "1.4.1"
}

apply plugin: 'com.android.library'
apply plugin: 'checkstyle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    sourceSets {
        main {
            res.srcDirs += 'src/main/res-cards'
            res.srcDirs += 'src/main/res-flags'
            res.srcDirs +=
                    [
                            'src/main/res/layouts/activities',
                            'src/main/res/layouts/fragments',
                            'src/main/res/layouts/components',
                            'src/main/res/layouts',
                            'src/main/res'
                    ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        quiet false
        //abortOnError false
        ignoreWarnings true
        disable 'MissingTranslation' //This is disabled until we get updated translations
    }

}
configurations {

}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.android.support:appcompat-v7:27.1.1'
    compile 'com.android.support:design:27.1.1'
    compile 'com.android.support:support-fragment:27.1.1'
    compile 'com.android.support:support-v4:27.1.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.10.0'
    testCompile 'org.robolectric:robolectric:3.5.1'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestCompile 'com.android.support.test:runner:1.0.2'

    testCompile 'org.powermock:powermock-api-mockito:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4-rule-agent:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4:1.6.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.10.0'
    testCompile 'com.android.support.test:runner:1.0.2'

    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
}

tasks.withType(Test) {
    systemProperty "robolectric.logging", "stdout"
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    //archives javadocsJar
    archives sourcesJar
}

androidGitVersion {
    hideBranches = ['develop', 'master', 'review']
}

String versionName = "v-" + System.getenv('TRAVIS_BRANCH') + "-" + System.getenv('TRAVIS_TAG') + "-" + System.getenv('TRAVIS_JOB_NUMBER')
def siteUrl = 'https://github.com/bluesnap/bluesnap-android-int'
def gitUrl = 'https://github.com/bluesnap/bluesnap-android-int.git'
version = androidGitVersion.name()

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_APIKEY')
    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'com.bluesnap'
        group = 'com.bluesnap'
        name = 'bluesnap-android'
        userOrg = 'bluesnap'
        desc = 'BlueSnap Android SDK Demo App'
        licenses = ['MIT']
        vcsUrl = gitUrl
        publicDownloadNumbers = false
        labels = ['aar', 'android']
        version {
            name = androidGitVersion.name()
            released = new Date()
            vcsTag = String.valueOf(System.getenv('TRAVIS_TAG'))
            attributes = [
                    'test'       : String.valueOf(System.getenv('TRAVIS_TEST_RESULT')),
                    'commit'     : String.valueOf(System.getenv('TRAVIS_COMMIT')),
                    'jobnumber'  : String.valueOf(System.getenv('TRAVIS_JOB_NUMBER')),
                    'branch'     : String.valueOf(System.getenv('TRAVIS_BRANCH')),
                    'versioncode': String.valueOf(androidGitVersion.code())
            ]
        }

    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'Bluesnap Android SDK'
                groupId 'com.bluesnap'
                url siteUrl
                licenses {
                    license {
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id 'snpori'
                        name 'snpori'
                        email 'oribsnap@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}



